/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}div.mainWrapper{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;max-height:100vh}div.mainWrapper>div.contentWrapper{-ms-flex:1 1 auto;flex:1 1 auto;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}div.mainWrapper>div.contentWrapper>.page{-ms-flex-positive:1;flex-grow:1}div.mainWrapper>footer.mainFooter{-ms-flex:0 0 auto;flex:0 0 auto}body,html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}body{font-size:1em;font-family:Roboto,sans-serif;color:#1b1e1f;position:relative}img{max-width:100%}a>img{display:table}ul.disc{list-style-type:disc;padding-left:20px}ol.decimal{list-style-type:decimal;padding-left:20px}.capitalize{text-transform:capitalize}.uppercase{text-transform:uppercase}.text-right{text-align:right}.text-center{text-align:center}.title{font-weight:700;font-family:Roboto,sans-serif}.title+*{margin-top:15px}.bold{font-weight:700}.semi-bold{font-weight:600}.sub-title{margin-top:10px;font-size:.6em}.page-title{font-size:2rem;text-align:center}.section-title{font-size:1.5rem}.sectionBlock-title{font-size:24px}.article-title{font-size:1.5rem}.mainWrapper{max-width:1920px;margin:0 auto}.contentWrapper{overflow:hidden}.page{background-color:#add8e6}.pageSection{background-color:inherit}.pageBackgroundWrapper{position:absolute;top:0;left:0;height:100%;width:100%;z-index:-50;background-color:#add8e6}.wrapperBlock>*{width:100%}.inlineImg{background-repeat:no-repeat;background-size:cover;background-position:50%}.imgWrapper{display:table}.imgWrapper>img{display:table-cell}.relative{position:relative}.absolute{position:absolute}.absolute.center{top:50%;left:50%;transform:translate(-50%,-50%)}.absolute.stretch{top:0;bottom:0;left:0;right:0}input,select{height:40px}input[type=checkbox]{width:15px;height:15px;margin:0}input[type=checkbox]+label{margin-bottom:0;margin-left:15px;width:90%}a{text-decoration:none;color:#252829}a.underline{text-decoration:underline}.btn,a.underline:focus,a.underline:hover{text-decoration:none}.btn{padding:1px 15px 0;font-size:14px;box-sizing:border-box;text-align:center;display:inline-block;border:1px solid;line-height:38px}.btn:focus,.btn:hover{text-decoration:none}.btn--primary{background-color:transparent;color:#1b1e1f;font-family:Roboto,sans-serif;border-color:#f08080}.btn--primary:focus,.btn--primary:hover{background-color:#f08080;color:#fff}ul.breadcrumbs{margin-bottom:10px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}ul.breadcrumbs>li{display:inline-block}ul.breadcrumbs>li a{color:#1b1e1f;font-size:14px}ul.breadcrumbs>li a:focus,ul.breadcrumbs>li a:hover{text-decoration:underline}ul.breadcrumbs>li.active a{opacity:.5}ul.breadcrumbs>li.active a:focus,ul.breadcrumbs>li.active a:hover{text-decoration:none}ul.breadcrumbs>li+li{margin-left:5px}ul.breadcrumbs>li+li:before{content:"";width:6px;height:6px;background-color:#f08080;display:inline-block;margin-right:8px;border-radius:50%;vertical-align:middle}.social-media-list li{display:inline-block;vertical-align:top;width:40px;height:40px;border-radius:50%;background-color:#d8d8d8;transition:all .4s}.social-media-list li+li{margin-left:5px}.social-media-list li .icomoon{display:inline-block;width:100%;height:100%;line-height:40px;vertical-align:middle;text-align:center}.social-media-list li .icomoon:before{font-size:16px;color:#0d0d0f}.darkOverlay,.gradientOverlay{background-color:#000;height:100%;width:100%;position:absolute;top:0;left:0;opacity:.6;z-index:850}.hiddenContent.height{height:0;overflow:hidden;transition:height .4s ease-out}.hiddenContent.right{right:0;transform:translateX(100%);transition:transform .4s ease-out}.hiddenContent.scale{transform:scaleY(0);transform-origin:0 0;transition:transform .3s}.hiddenContent.scale.opacityAnimate>div{opacity:0;transition:opacity .2s ease-in-out .15s}.hiddenContent.scale.opacityAnimate:not(.showScale){transition-delay:.1s}.hiddenContent.scale.opacityAnimate:not(.showScale)>div{transition-delay:0s}.js_hideScale{transform:scaleY(0)!important}.js_showScale{transform:scaleY(1)!important}.js_showScale.opacityAnimate>div{opacity:1!important}.js_hide{display:none!important}.js_show{display:block!important}.toggleBlock{display:none}.toggleBlock.active{display:block}.main-video-wrapper{margin-top:25px;position:relative;padding-bottom:108%;height:0;overflow:hidden}.main-video-wrapper>iframe{position:absolute;top:0;left:0;width:100%;height:100%;text-align:center}.description .description-title{font-size:16px;line-height:24px}.description .description-title+*{margin-top:6px}.description p{font-size:.9rem;line-height:1.35rem}.description p+p{margin-top:25px}.description ol,.description ol+p,.description ul,.description ul+p{margin-top:15px}.description ol>li,.description ul>li{margin-top:10px;line-height:1.35rem;font-size:.9rem}.description.page-description{margin-top:25px}.description.page-description .link-wrapper{text-align:right}header.mainHeader{text-align:center;background-color:#f08080;color:#fff}footer.mainFooter{text-align:center;background-color:#252829;color:#fff}.homePage{position:relative;max-height:100vh;min-height:100vh;background:#eaeaea}.homePage .slick-slider{height:100vh}.homePage .slick-list,.homePage .slick-track{height:100%}.homePage .slider__item{position:relative}.homePage .slider__item img{height:100%;width:100%;-o-object-fit:cover;object-fit:cover}.homePage .quote-container{position:absolute;left:50%;transform:translate(-50%);top:30px;padding:20px;width:90%;border-radius:3px;border:2px solid grey;box-shadow:5px 5px 15px 5px rgba(0,0,0,.5);background-color:#fff}.homePage .quote-container .quote{text-align:center;margin:0;height:auto;font-size:1.35em;line-height:26px;font-weight:500}.homePage .quote-container .cite{display:block;height:auto;padding-top:20px;font-size:1em;text-align:right}.homePage .social{position:absolute;left:10px;right:10px;bottom:10px;text-align:center;padding:30px 20px;background-color:hsla(0,0%,100%,.5);box-shadow:2px 3px 5px 2px rgba(0,0,0,.5)}.homePage .social h1{margin-top:0}.homePage .autor-descr{font-style:italic}.homePage address>a{padding:0 10px;text-decoration:underline;font-size:1.4em;line-height:1.8em}@media (min-width:991px){.page-title{font-size:2rem}.section-title{font-size:28px}}@media (min-width:767px){.main-video-wrapper{padding-bottom:45%}}@media (min-width:768px){.homePage .quote-container{padding:40px 50px;width:auto}.homePage .quote-container .quote{font-size:1.75em}.homePage .social{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);bottom:auto;padding:70px}.homePage .social h1{font-size:2.2em}.homePage .autor-descr{font-size:1.4em}.homePage address>a{font-size:1.5em;line-height:1.9em}.homePage address>a:focus,.homePage address>a:hover{color:#fa8b0c}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
